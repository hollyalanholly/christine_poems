{"version":3,"sources":["Pages/HomePage.js","Pages/Poems.js","Pages/ContactMe.js","Nav/RightNavBar.js","Nav/Burger.js","Nav/NavBar.js","Nav/BackDrop.js","App.js","serviceWorker.js","index.js"],"names":["HomePage","Poems","ContactMe","className","class","type","placeholder","RightNavBar","props","drawerClasses","show","onClick","click","to","Burger","NavBar","rightBarClickHandler","backdrop","App","state","rightNavBarOpen","rightBarTogglerClickHandler","setState","prevState","backDropClickHandler","backDrop","this","style","height","path","component","exact","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.11aeb105.chunk.js","sourcesContent":["import React from 'react';\n\nconst HomePage = () => (\n    <>\n    <h1>Home Page</h1>\n    </>\n);\n\nexport default HomePage;\n","import React from 'react';\n\nconst Poems = () => (\n    <>\n    <h1>The Poems</h1>\n    </>\n);\n\nexport default Poems;","import React from 'react';\nimport './ContactMe.css';\n\nconst ContactMe = () => (\n\n    <div className=\"contact_form_page\">\n        <h1>Contact Me</h1>\n        <div className=\"container contact_form\">\n            <form>\n                <div className=\"row justify-content-center align-items-center\">\n                    <div class=\"col-10\">\n                        <input type=\"text\" className=\"form-control\" placeholder=\"name\" />\n                    </div>\n                </div>\n\n                <div className=\"row justify-content-center align-items-center\">\n                    <div class=\"col-10\">\n                        <input type=\"email\" className=\"form-control\" placeholder=\"name@email.com\" />\n                    </div>\n                </div>\n\n                <div className=\"row justify-content-center align-items-center\" >\n                    <div class=\"col-10\">\n                        <textarea type=\"textarea\" className=\"form-control contact_form_messagebox\" placeholder=\"please send me a message\"></textarea>\n                    </div>\n                </div>\n\n                <div class=\"row justify-content-center align-items-center\">\n                    <div class=\"col-sm-10\">\n                        <button type=\"submit\" className=\"btn btn-danger contact_form_button\">Submit</button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    </div>\n);\n\nexport default ContactMe;","import React, { Component } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './RightNavBar.css';\nimport styled, { css } from 'styled-components';\n\n//aim is to click on burger to open righnav and click on backdrop to close it\n\nconst RightNavBar = ( props ) => {\n\n    let drawerClasses = 'RightNav';\n    if (props.show) {\n        drawerClasses = 'RightNav open'; \n        //this has TWO classes so can use the open class to change position of right nav bar when open\n    }\n\n    return (\n        <nav className={drawerClasses}>\n            <button className = \"rightul\" onClick={props.click}>\n                <li className= \"nav-item\">\n                <NavLink className =\"linkcol\" to =\"/\">Home</NavLink> \n                </li>\n                <li className=\"nav-item\">\n                <NavLink className =\"linkcol\" to =\"/poems\">The Poems</NavLink>\n                </li>\n                <li className=\"nav-item\">\n                <NavLink className =\"linkcol\" to =\"/contact_me\">Contact Me</NavLink>\n                </li>\n            </button>\n            \n        </nav>\n    )\n}\n\nexport default RightNavBar;","import React, { useState } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Burger.css';\nimport styled from 'styled-components';\nimport RightNavBar from './RightNavBar';\nimport SideBar from './SideBar';\n\n\nconst Burger = (props) => {\n\n    return (\n    <button\n        className=\"toggle_button\" \n        onClick={props.click} >  \n            {/* this takes the false value of open and transforms it to TRUE when clicked */}\n                <div className=\"burgerDiv\"></div>\n                <div className=\"burgerDiv\"></div>\n                <div className=\"burgerDiv\"></div>  \n    </button>  \n    )\n}\n\nexport default Burger;\n\n","import React, { Component } from 'react';\n\nimport {Link} from 'react-router-dom';\nimport { NavLink } from 'react-router-dom';\nimport HamburgerMenu from 'react-hamburger-menu';\nimport Dimensions from 'react-dimensions'\n\nimport RightNavBar from './RightNavBar';\nimport Burger from './Burger';\n\nimport './NavBar.css';\n\nconst NavBar = (props) => {\n    return (\n        <nav className =\"Nav\">\n            <div className=\"logo\">\n                NavBar\n            </div>\n            <div className=\"navlinks\">\n                <div><NavLink className =\"linkcol\" to =\"/\">Home</NavLink></div>\n                <div><NavLink className =\"linkcol\" to =\"/poems\">The Poems</NavLink></div>\n                <div><NavLink className =\"linkcol\" to =\"/contact_me\">Contact Me</NavLink></div>\n            </div>\n            <div className=\"Burger\">\n                <Burger click ={props.rightBarClickHandler}/>\n            </div>  \n        </nav>\n    )\n}\n\nexport default NavBar;","import React from \"react\";\n\nimport './BackDrop.css';\n\n\n\nconst backdrop = props => (\n    <div className=\"backDrop\" onClick={props.click}/>\n);\n\nexport default backdrop;\n  ","import React, { Component, useState, useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport {\n  Link,\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\n\nimport './App.css';\n\nimport HomePage from './Pages/HomePage';\nimport Poems from './Pages/Poems';\nimport ContactMe from './Pages/ContactMe';\nimport NavBar from './Nav/NavBar';\nimport RightNavBar from './Nav/RightNavBar';\n// import SideBar from \"./Nav/SideBar\";\nimport BackDrop from \"./Nav/BackDrop\";\n\n\nclass App extends Component {\n  state = {rightNavBarOpen: false};\n\n  rightBarTogglerClickHandler =() => {\n  this.setState((prevState) => {\n      return {rightNavBarOpen: !prevState.rightNavBarOpen};\n  });\n  };\n\n  rightBarClickHandler = () => {\n    this.setState((prevState) => {\n      return {rightNavBarOpen: !prevState.rightNavBarOpen};\n    });\n  };\n\n//this is some code so when you click OUT Of the right nav bar it should vanish\n  backDropClickHandler = () => {\n    this.setState({rightNavBarOpen: false});\n  };\n  \n  render() {\n    let backDrop;\n    if (this.state.rightNavBarOpen) {\n      backDrop = <BackDrop click={this.backDropClickHandler} />\n    //we are doing this so we can resue the components else where//\n    }\n\n    return (\n      <Router>\n      <div \n        className=\"App\"\n        style={{height: '100%'}}>\n         {/* <SideBar pageWrapId={\"page-wrap\"} outerContainerId={\"App\"} /> */}\n          < NavBar rightBarClickHandler = {this.rightBarTogglerClickHandler} />\n          <RightNavBar show= {this.state.rightNavBarOpen}/>\n          {backDrop}\n        \n          <Switch>\n          <Route path=\"/\" component={HomePage} exact />\n          <Route path=\"/Poems\" component={Poems} />\n          <Route path=\"/contact_me\" component={ContactMe} />\n          </Switch>\n      \n    </div>\n    </Router>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}